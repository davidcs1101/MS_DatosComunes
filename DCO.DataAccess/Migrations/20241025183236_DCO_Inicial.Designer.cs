// <auto-generated />
using System;
using DCO.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DCO.DataAcces.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241025183236_DCO_Inicial")]
    partial class DCO_Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("DCO.Dominio.Entidades.DCO_DatoConstante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<bool>("EstadoActivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaCreado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificado")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<int>("UsuarioCreadorId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioModificadorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.ToTable("DCO_DatosConstantes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Codigo = "CAUSAEXTERNAANEXO2",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2024, 10, 25, 13, 32, 35, 823, DateTimeKind.Local).AddTicks(3521),
                            Nombre = "CAUSAS EXTERNAS DE CONSULTA PARA ANEXO 2",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 2,
                            Codigo = "TIPOIDENTIANEXO",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2024, 10, 25, 13, 32, 35, 823, DateTimeKind.Local).AddTicks(3523),
                            Nombre = "TIPOS DE IDENTIFICACIÓN PARA REGISTRO DE ANEXOS TÉCNICOS A PACIENTES",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 3,
                            Codigo = "TIPOIDENTIEMPRESA",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2024, 10, 25, 13, 32, 35, 823, DateTimeKind.Local).AddTicks(3525),
                            Nombre = "TIPOS DE IDENTIFICACION PARA REGISTRO DE EMPRESAS",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 4,
                            Codigo = "TIPOIDENTIREGISTROUSUARIO",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2024, 10, 25, 13, 32, 35, 823, DateTimeKind.Local).AddTicks(3526),
                            Nombre = "TIPOS DE IDENTIFICACIÓN PARA REGISTRO DE USUARIOS DE APLICACIÓN",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 5,
                            Codigo = "TIPOREGIMENANEXO2",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2024, 10, 25, 13, 32, 35, 823, DateTimeKind.Local).AddTicks(3527),
                            Nombre = "TIPOS DE REGIMEN DISPONIBLES PARA ANEXO 2",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 6,
                            Codigo = "TIPOREGIMENANEXO3",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2024, 10, 25, 13, 32, 35, 823, DateTimeKind.Local).AddTicks(3529),
                            Nombre = "TIPOS DE REGIMEN DISPONIBLES PARA ANEXO 3",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 7,
                            Codigo = "TIPOREGIMENANEXO9",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2024, 10, 25, 13, 32, 35, 823, DateTimeKind.Local).AddTicks(3530),
                            Nombre = "TIPOS DE REGIMEN DISPONIBLES PARA ANEXO 9",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 8,
                            Codigo = "TRIAGEANEXO2",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2024, 10, 25, 13, 32, 35, 823, DateTimeKind.Local).AddTicks(3531),
                            Nombre = "NIVELES DE TRIAGE PARA EL ANEXO 2",
                            UsuarioCreadorId = 1
                        });
                });

            modelBuilder.Entity("DCO.Dominio.Entidades.DCO_DatoConstanteDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DatoConstanteId")
                        .HasColumnType("int");

                    b.Property<int>("DatoId")
                        .HasColumnType("int");

                    b.Property<bool>("EstadoActivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaCreado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificado")
                        .HasColumnType("datetime");

                    b.Property<int>("UsuarioCreadorId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioModificadorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DatoConstanteId", "DatoId")
                        .IsUnique();

                    b.ToTable("DCO_DatosConstantesDetalles");
                });

            modelBuilder.Entity("DCO.Dominio.Entidades.DCO_Lista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<bool>("EstadoActivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaCreado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificado")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<int>("UsuarioCreadorId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioModificadorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.ToTable("DCO_Listas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Codigo = "CARGOSEMPLEADOS",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2024, 10, 25, 13, 32, 35, 823, DateTimeKind.Local).AddTicks(3387),
                            Nombre = "CARGOS PARA EMPLEADOS",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 2,
                            Codigo = "CAUSASEXTERNAS",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2024, 10, 25, 13, 32, 35, 823, DateTimeKind.Local).AddTicks(3404),
                            Nombre = "CAUSAS EXTERNAS SALUD",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 3,
                            Codigo = "ESPECIALIDAD",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2024, 10, 25, 13, 32, 35, 823, DateTimeKind.Local).AddTicks(3406),
                            Nombre = "ESPECIALIDADES",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 4,
                            Codigo = "NIVELESCOMPLEJIDAD",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2024, 10, 25, 13, 32, 35, 823, DateTimeKind.Local).AddTicks(3407),
                            Nombre = "NIVELES DE COMPLEJIDAD EN SALUD",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 5,
                            Codigo = "ESTADOANEXOS",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2024, 10, 25, 13, 32, 35, 823, DateTimeKind.Local).AddTicks(3409),
                            Nombre = "ESTADOS DE LOS ANEXOS TÉCNICOS",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 6,
                            Codigo = "SERVICIOS",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2024, 10, 25, 13, 32, 35, 823, DateTimeKind.Local).AddTicks(3410),
                            Nombre = "SERVICIOS DE SALUD",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 7,
                            Codigo = "SEXOBIOLOGICO",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2024, 10, 25, 13, 32, 35, 823, DateTimeKind.Local).AddTicks(3412),
                            Nombre = "SEXO BIOLÓGICO",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 8,
                            Codigo = "TIPOAFILIACION",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2024, 10, 25, 13, 32, 35, 823, DateTimeKind.Local).AddTicks(3413),
                            Nombre = "TIPOS DE AFILIACIÓN EN SALUD",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 9,
                            Codigo = "TIPOSIDENTIFICACION",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2024, 10, 25, 13, 32, 35, 823, DateTimeKind.Local).AddTicks(3414),
                            Nombre = "TIPOS DE IDENTIFICACIÓN",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 10,
                            Codigo = "TIPOREGIMEN",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2024, 10, 25, 13, 32, 35, 823, DateTimeKind.Local).AddTicks(3416),
                            Nombre = "TIPOS DE REGIMEN EN SALUD",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 11,
                            Codigo = "TIPOSTRIAGE",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2024, 10, 25, 13, 32, 35, 823, DateTimeKind.Local).AddTicks(3417),
                            Nombre = "TIPOS DE TRIAGE",
                            UsuarioCreadorId = 1
                        });
                });

            modelBuilder.Entity("DCO.Dominio.Entidades.DCO_ListaDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<bool>("EstadoActivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaCreado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificado")
                        .HasColumnType("datetime");

                    b.Property<int>("ListaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<int>("UsuarioCreadorId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioModificadorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ListaId", "Codigo")
                        .IsUnique();

                    b.ToTable("DCO_ListasDetalles");
                });

            modelBuilder.Entity("DCO.Dominio.Entidades.DCO_DatoConstanteDetalle", b =>
                {
                    b.HasOne("DCO.Dominio.Entidades.DCO_DatoConstante", "DatoConstante")
                        .WithMany("DatosConstantesDetalles")
                        .HasForeignKey("DatoConstanteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DatoConstante");
                });

            modelBuilder.Entity("DCO.Dominio.Entidades.DCO_ListaDetalle", b =>
                {
                    b.HasOne("DCO.Dominio.Entidades.DCO_Lista", "Lista")
                        .WithMany("ListasDetalles")
                        .HasForeignKey("ListaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Lista");
                });

            modelBuilder.Entity("DCO.Dominio.Entidades.DCO_DatoConstante", b =>
                {
                    b.Navigation("DatosConstantesDetalles");
                });

            modelBuilder.Entity("DCO.Dominio.Entidades.DCO_Lista", b =>
                {
                    b.Navigation("ListasDetalles");
                });
#pragma warning restore 612, 618
        }
    }
}
