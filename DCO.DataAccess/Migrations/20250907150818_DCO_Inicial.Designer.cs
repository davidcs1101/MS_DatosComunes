// <auto-generated />
using System;
using DCO.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DCO.DataAcces.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250907150818_DCO_Inicial")]
    partial class DCO_Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("DCO.Dominio.Entidades.DCO_Barrio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(5)");

                    b.Property<bool>("EstadoActivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaCreado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificado")
                        .HasColumnType("datetime");

                    b.Property<int>("MunicipioId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<int>("UsuarioCreadorId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioModificadorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MunicipioId", "Codigo")
                        .IsUnique();

                    b.ToTable("DCO_Barrio");
                });

            modelBuilder.Entity("DCO.Dominio.Entidades.DCO_ColaSolicitud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ErrorMensaje")
                        .HasColumnType("Text")
                        .HasComment("Detalle de error de procasado de la solicitud.");

                    b.Property<short>("Estado")
                        .HasColumnType("smallint")
                        .HasComment("Estado del proceso de la solicitud. (0: Pendiente, 1: Procesando, 2: Exitosa, 3: Fallida).");

                    b.Property<DateTime>("FechaCreado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("FechaUltimoIntento")
                        .HasColumnType("datetime");

                    b.Property<int>("Intentos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasComment("Intentos del proceso");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasColumnType("Text")
                        .HasComment("Payload para la solicitud.");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasComment("Tipo de solicitud a realizar.");

                    b.HasKey("Id");

                    b.HasIndex("Estado");

                    b.HasIndex("Tipo");

                    b.ToTable("DCO_ColaSolicitudes");
                });

            modelBuilder.Entity("DCO.Dominio.Entidades.DCO_DatoConstante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<bool>("EstadoActivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaCreado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificado")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<int>("UsuarioCreadorId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioModificadorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.ToTable("DCO_DatosConstantes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Codigo = "CAUSAEXTERNAANEXO2",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8579),
                            Nombre = "CAUSAS EXTERNAS DE CONSULTA PARA ANEXO 2",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 2,
                            Codigo = "TIPOIDENTIANEXO",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8582),
                            Nombre = "TIPOS DE IDENTIFICACIÓN PARA REGISTRO DE ANEXOS TÉCNICOS A PACIENTES",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 3,
                            Codigo = "TIPOIDENTIEMPRESA",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8585),
                            Nombre = "TIPOS DE IDENTIFICACION PARA REGISTRO DE EMPRESAS",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 4,
                            Codigo = "TIPOIDENTIREGISTROUSUARIO",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8587),
                            Nombre = "TIPOS DE IDENTIFICACIÓN PARA REGISTRO DE USUARIOS DE APLICACIÓN",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 5,
                            Codigo = "TIPOREGIMENANEXO2",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8589),
                            Nombre = "TIPOS DE REGIMEN DISPONIBLES PARA ANEXO 2",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 6,
                            Codigo = "TIPOREGIMENANEXO3",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8592),
                            Nombre = "TIPOS DE REGIMEN DISPONIBLES PARA ANEXO 3",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 7,
                            Codigo = "TIPOREGIMENANEXO9",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8595),
                            Nombre = "TIPOS DE REGIMEN DISPONIBLES PARA ANEXO 9",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 8,
                            Codigo = "TRIAGEANEXO2",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8597),
                            Nombre = "NIVELES DE TRIAGE PARA EL ANEXO 2",
                            UsuarioCreadorId = 1
                        });
                });

            modelBuilder.Entity("DCO.Dominio.Entidades.DCO_DatoConstanteDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DatoConstanteId")
                        .HasColumnType("int");

                    b.Property<bool>("EstadoActivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaCreado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificado")
                        .HasColumnType("datetime");

                    b.Property<int>("ListaDetalleId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioCreadorId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioModificadorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ListaDetalleId");

                    b.HasIndex("DatoConstanteId", "ListaDetalleId")
                        .IsUnique();

                    b.ToTable("DCO_DatosConstantesDetalles");
                });

            modelBuilder.Entity("DCO.Dominio.Entidades.DCO_Departamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(5)");

                    b.Property<bool>("EstadoActivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaCreado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificado")
                        .HasColumnType("datetime");

                    b.Property<short>("Indicativo")
                        .HasColumnType("smallint");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<int>("UsuarioCreadorId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioModificadorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.ToTable("DCO_Departamento");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Codigo = "05",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8654),
                            Indicativo = (short)4,
                            Nombre = "ANTIOQUIA",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 2,
                            Codigo = "08",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8657),
                            Indicativo = (short)5,
                            Nombre = "ATLANTICO",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 3,
                            Codigo = "11",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8660),
                            Indicativo = (short)1,
                            Nombre = "BOGOTA",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 4,
                            Codigo = "13",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8663),
                            Indicativo = (short)5,
                            Nombre = "BOLIVAR",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 5,
                            Codigo = "15",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8665),
                            Indicativo = (short)8,
                            Nombre = "BOYACA",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 6,
                            Codigo = "17",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8668),
                            Indicativo = (short)6,
                            Nombre = "CALDAS",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 7,
                            Codigo = "18",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8670),
                            Indicativo = (short)8,
                            Nombre = "CAQUETA",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 8,
                            Codigo = "19",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8672),
                            Indicativo = (short)2,
                            Nombre = "CAUCA",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 9,
                            Codigo = "20",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8675),
                            Indicativo = (short)5,
                            Nombre = "CESAR",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 10,
                            Codigo = "23",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8677),
                            Indicativo = (short)4,
                            Nombre = "CORDOBA",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 11,
                            Codigo = "25",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8680),
                            Indicativo = (short)1,
                            Nombre = "CUNDINAMARCA",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 12,
                            Codigo = "27",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8682),
                            Indicativo = (short)4,
                            Nombre = "CHOCO",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 13,
                            Codigo = "41",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8685),
                            Indicativo = (short)8,
                            Nombre = "HUILA",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 14,
                            Codigo = "44",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8687),
                            Indicativo = (short)5,
                            Nombre = "LA GUAJIRA",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 15,
                            Codigo = "47",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8690),
                            Indicativo = (short)5,
                            Nombre = "MAGDALENA",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 16,
                            Codigo = "50",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8692),
                            Indicativo = (short)8,
                            Nombre = "META",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 17,
                            Codigo = "52",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8694),
                            Indicativo = (short)2,
                            Nombre = "NARIÑO",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 18,
                            Codigo = "54",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8697),
                            Indicativo = (short)7,
                            Nombre = "N. DE SANTANDER",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 19,
                            Codigo = "63",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8699),
                            Indicativo = (short)6,
                            Nombre = "QUINDIO",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 20,
                            Codigo = "66",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8702),
                            Indicativo = (short)6,
                            Nombre = "RISARALDA",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 21,
                            Codigo = "68",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8704),
                            Indicativo = (short)7,
                            Nombre = "SANTANDER",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 22,
                            Codigo = "70",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8707),
                            Indicativo = (short)5,
                            Nombre = "SUCRE",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 23,
                            Codigo = "73",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8709),
                            Indicativo = (short)8,
                            Nombre = "TOLIMA",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 24,
                            Codigo = "76",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8767),
                            Indicativo = (short)2,
                            Nombre = "VALLE DEL CAUCA",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 25,
                            Codigo = "81",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8770),
                            Indicativo = (short)7,
                            Nombre = "ARAUCA",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 26,
                            Codigo = "85",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8772),
                            Indicativo = (short)8,
                            Nombre = "CASANARE",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 27,
                            Codigo = "86",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8775),
                            Indicativo = (short)8,
                            Nombre = "PUTUMAYO",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 28,
                            Codigo = "88",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8777),
                            Indicativo = (short)8,
                            Nombre = "SAN ANDRES",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 29,
                            Codigo = "91",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8779),
                            Indicativo = (short)8,
                            Nombre = "AMAZONAS",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 30,
                            Codigo = "94",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8782),
                            Indicativo = (short)8,
                            Nombre = "GUAINIA",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 31,
                            Codigo = "95",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8784),
                            Indicativo = (short)8,
                            Nombre = "GUAVIARE",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 32,
                            Codigo = "97",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8787),
                            Indicativo = (short)8,
                            Nombre = "VAUPES",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 33,
                            Codigo = "98",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8789),
                            Indicativo = (short)0,
                            Nombre = "EXTRANJERO",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 34,
                            Codigo = "99",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8791),
                            Indicativo = (short)8,
                            Nombre = "VICHADA",
                            UsuarioCreadorId = 1
                        });
                });

            modelBuilder.Entity("DCO.Dominio.Entidades.DCO_Lista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<bool>("EstadoActivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaCreado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificado")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<int>("UsuarioCreadorId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioModificadorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.ToTable("DCO_Listas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Codigo = "CARGOSEMPLEADOS",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8324),
                            Nombre = "CARGOS PARA EMPLEADOS",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 2,
                            Codigo = "CAUSASEXTERNAS",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8327),
                            Nombre = "CAUSAS EXTERNAS SALUD",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 3,
                            Codigo = "ESPECIALIDAD",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8330),
                            Nombre = "ESPECIALIDADES",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 4,
                            Codigo = "NIVELESCOMPLEJIDAD",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8333),
                            Nombre = "NIVELES DE COMPLEJIDAD EN SALUD",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 5,
                            Codigo = "ESTADOANEXOS",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8336),
                            Nombre = "ESTADOS DE LOS ANEXOS TÉCNICOS",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 6,
                            Codigo = "SERVICIOS",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8338),
                            Nombre = "SERVICIOS DE SALUD",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 7,
                            Codigo = "SEXOBIOLOGICO",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8340),
                            Nombre = "SEXO BIOLÓGICO",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 8,
                            Codigo = "TIPOAFILIACION",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8342),
                            Nombre = "TIPOS DE AFILIACIÓN EN SALUD",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 9,
                            Codigo = "TIPOSIDENTIFICACION",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8345),
                            Nombre = "TIPOS DE IDENTIFICACIÓN",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 10,
                            Codigo = "TIPOREGIMEN",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8347),
                            Nombre = "TIPOS DE REGIMEN EN SALUD",
                            UsuarioCreadorId = 1
                        },
                        new
                        {
                            Id = 11,
                            Codigo = "TIPOSTRIAGE",
                            EstadoActivo = true,
                            FechaCreado = new DateTime(2025, 9, 7, 10, 8, 18, 350, DateTimeKind.Local).AddTicks(8349),
                            Nombre = "TIPOS DE TRIAGE",
                            UsuarioCreadorId = 1
                        });
                });

            modelBuilder.Entity("DCO.Dominio.Entidades.DCO_ListaDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<bool>("EstadoActivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaCreado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificado")
                        .HasColumnType("datetime");

                    b.Property<int>("ListaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<int>("UsuarioCreadorId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioModificadorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ListaId", "Codigo")
                        .IsUnique();

                    b.ToTable("DCO_ListasDetalles");
                });

            modelBuilder.Entity("DCO.Dominio.Entidades.DCO_Municipio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(5)");

                    b.Property<int>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<bool>("EstadoActivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaCreado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificado")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<int>("UsuarioCreadorId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioModificadorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentoId", "Codigo")
                        .IsUnique();

                    b.ToTable("DCO_Municipio");
                });

            modelBuilder.Entity("DCO.Dominio.Entidades.DCO_Barrio", b =>
                {
                    b.HasOne("DCO.Dominio.Entidades.DCO_Municipio", "Municipio")
                        .WithMany("Barrios")
                        .HasForeignKey("MunicipioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Municipio");
                });

            modelBuilder.Entity("DCO.Dominio.Entidades.DCO_DatoConstanteDetalle", b =>
                {
                    b.HasOne("DCO.Dominio.Entidades.DCO_DatoConstante", "DatoConstante")
                        .WithMany("DatosConstantesDetalles")
                        .HasForeignKey("DatoConstanteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DCO.Dominio.Entidades.DCO_ListaDetalle", "ListaDetalle")
                        .WithMany("DatosConstantesDetalles")
                        .HasForeignKey("ListaDetalleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DatoConstante");

                    b.Navigation("ListaDetalle");
                });

            modelBuilder.Entity("DCO.Dominio.Entidades.DCO_ListaDetalle", b =>
                {
                    b.HasOne("DCO.Dominio.Entidades.DCO_Lista", "Lista")
                        .WithMany("ListasDetalles")
                        .HasForeignKey("ListaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Lista");
                });

            modelBuilder.Entity("DCO.Dominio.Entidades.DCO_Municipio", b =>
                {
                    b.HasOne("DCO.Dominio.Entidades.DCO_Departamento", "Departamento")
                        .WithMany("Municipios")
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Departamento");
                });

            modelBuilder.Entity("DCO.Dominio.Entidades.DCO_DatoConstante", b =>
                {
                    b.Navigation("DatosConstantesDetalles");
                });

            modelBuilder.Entity("DCO.Dominio.Entidades.DCO_Departamento", b =>
                {
                    b.Navigation("Municipios");
                });

            modelBuilder.Entity("DCO.Dominio.Entidades.DCO_Lista", b =>
                {
                    b.Navigation("ListasDetalles");
                });

            modelBuilder.Entity("DCO.Dominio.Entidades.DCO_ListaDetalle", b =>
                {
                    b.Navigation("DatosConstantesDetalles");
                });

            modelBuilder.Entity("DCO.Dominio.Entidades.DCO_Municipio", b =>
                {
                    b.Navigation("Barrios");
                });
#pragma warning restore 612, 618
        }
    }
}
